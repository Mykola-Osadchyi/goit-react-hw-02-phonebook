{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","getContact","reset","onSubmit","this","type","onChange","disabled","Component","Filter","filterValue","filterData","ContactList","contacts","removeContact","map","id","onClick","App","userContacts","filter","addContact","data","newContact","shortid","generate","find","contact","alert","prevState","deleteContact","contactId","changeFilter","findContact","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,gcCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,QC+DxBI,E,4MA9DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,cAAtBJ,EADc,EACdA,KAAMK,EADQ,EACRA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,WAAW,EAAKX,OAC3B,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,uDAKV,OACE,mCACE,uBAAMW,SAAUC,KAAKN,aAArB,UACE,yCAEE,uBACEO,KAAK,OACLd,KAAK,OACLK,MAAOQ,KAAKd,MAAMC,KAClBe,SAAUF,KAAKX,kBAInB,2CAEE,uBACEY,KAAK,OACLd,KAAK,SACLK,MAAOQ,KAAKd,MAAME,OAClBc,SAAUF,KAAKX,kBAInB,wBAAQY,KAAK,SAASE,UAAWH,KAAKd,MAAME,OAA5C,kC,GAlDgBgB,aCYXC,EAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAhB,OACb,0DAEE,uBAAON,KAAK,OAAOT,MAAOc,EAAaJ,SAAUK,QCwBtCC,EA3BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAClB,mCACE,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,4BAAID,IACJ,4BAAIC,IACJ,wBAAQa,KAAK,SAASY,QAAS,kBAAMH,EAAcE,IAAnD,sBAHOA,W,QC+DFE,E,4MA7Db5B,MAAQ,CACNuB,SAAUM,EACVC,OAAQ,I,EAGVC,WAAa,SAAAC,GACX,IAAMC,EAAa,CACjBP,GAAIQ,IAAQC,WACZlC,KAAM+B,EAAK/B,KACXC,OAAQ8B,EAAK9B,QAIb,EAAKF,MAAMuB,SAASa,MAAK,SAAAC,GAAO,OAAIA,EAAQpC,OAASgC,EAAWhC,QAGhEqC,MAAM,GAAD,OAAIL,EAAWhC,KAAf,6BAEL,EAAKM,UAAS,SAAAgC,GAAS,MAAK,CAC1BhB,SAAS,CAAEU,GAAH,mBAAkBM,EAAUhB,gB,EAK1CiB,cAAgB,SAAAC,GACd,EAAKlC,UAAS,SAAAgC,GAAS,MAAK,CAC1BhB,SAAUgB,EAAUhB,SAASO,QAAO,SAAAO,GAAO,OAAIA,EAAQX,KAAOe,U,EAIlEC,aAAe,SAAAtC,GACb,EAAKG,SAAS,CAAEuB,OAAQ1B,EAAMC,cAAcC,S,EAG9CqC,YAAc,WAAO,IAAD,EACW,EAAK3C,MAA1BuB,EADU,EACVA,SACFqB,EAFY,EACAd,OACce,oBAChC,OAAOtB,EAASO,QAAO,SAAAO,GAAO,OAC5BA,EAAQpC,KAAK6C,cAAcC,SAASH,O,uDAKtC,IAAMI,EAAmBlC,KAAK6B,cAC9B,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAahC,WAAYG,KAAKiB,aAC9B,0CACA,cAAC,EAAD,CACEX,YAAaN,KAAKd,MAAM8B,OACxBT,WAAYP,KAAK4B,eAEnB,cAAC,EAAD,CACEnB,SAAUyB,EACVxB,cAAeV,KAAK0B,uB,GAxDZtB,aCHlB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.00991105.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3vQNe\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.getContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" disabled={!this.state.number}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  getContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filterValue, filterData }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={filterValue} onChange={filterData} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  filterData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n// import s from './Feedback.module.css';\r\n\r\nconst ContactList = ({ contacts, removeContact }) => (\r\n  <>\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button type=\"button\" onClick={() => removeContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  removeContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport userContacts from './userContacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: userContacts,\n    filter: '',\n  };\n\n  addContact = data => {\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const getDublicateContact = () =>\n      this.state.contacts.find(contact => contact.name === newContact.name);\n\n    if (getDublicateContact()) {\n      alert(`${newContact.name} is already in contacts!`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  findContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const filteredContacts = this.findContact();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm getContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filterValue={this.state.filter}\n          filterData={this.changeFilter}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          removeContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}